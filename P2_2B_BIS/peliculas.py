"""Module providing a function printing python version."""

# Lista para almacenar m√∫ltiples pel√≠culas
peliculas = []

# Diccionario para almacenar los atributos de UNA pel√≠cula
pelicula = {}

import os


def borrarpantalla():
    os.system("cls")  # En Windows, el comando correcto es "cls"


def esperartecla():
    input("\t Oprima cualquier tecla para continuar ...")
    borrarpantalla()


def crearPeliculas():
    borrarpantalla()
    print("\n\t.::üìù Alta de Pel√≠culas üìù::. ")
    pelicula.update({"nombre": input("INGRESA EL NOMBRE: ").upper().strip()})
    pelicula.update({"categoria": input("INGRESA LA CATEGORIA: ").upper().strip()})
    pelicula.update(
        {"clasificacion": input("INGRESA LA CLASIFICACION: ").upper().strip()}
    )
    pelicula.update({"genero": input("INGRESA EL GENERO: ").upper().strip()})
    pelicula.update({"idioma": input("INGRESA EL IDIOMA: ").upper().strip()})
    input("\n\t\t ‚úÖ LA OPERACI√ìN SE REALIZ√ì CON √âXITO ‚úÖ")


def borrarPeliculas():
    borrarpantalla()
    print("\n\t.::üìö Borrar TODAS las Pel√≠culas üìö::.\n")
    resp = input("üìö ¬øDeseas quitar todas las pel√≠culas del sistema? (Si/No): ").lower()
    if resp == "si":
        pelicula.clear()
        input("\n\t\t ‚úÖ LA OPERACI√ìN SE REALIZ√ì CON √âXITO ‚úÖ")


def mostrarPeliculas():
    borrarpantalla()
    print("\n\t.:: üîç Consultar Pel√≠cula üîç::.\n")
    if len(pelicula) > 0:
        for clave, valor in pelicula.items():
            print(f"\t{clave.capitalize()} : {valor}")
    else:
        print("\t ‚ö†Ô∏è No hay pel√≠culas en el sistema ‚ö†Ô∏è")


def agregarCaracteristicaPeliculas():
    borrarpantalla()
    print("\n\t.:: üìù Agregar Caracter√≠stica a Pel√≠cula üìù::.\n")
    atributo = input("Ingresa la nueva caracter√≠stica: ").lower().strip()
    valor = input("üìù Ingresa el valor de la caracter√≠stica: ").upper().strip()
    pelicula.update({atributo: valor})
    input("\n\t\t ‚úÖ CARACTER√çSTICA AGREGADA CON √âXITO ‚úÖ")


def modificarCaracteristicasPeliculas():
    borrarpantalla()
    print("\n\t.:: üîÑ Modificar Caracter√≠sticas de Pel√≠cula üîÑ::.\n")
    if len(pelicula) > 0:
        for clave in list(pelicula.keys()):
            print(f"\t{clave} : {pelicula[clave]}")
            resp = input(f"\t¬øDeseas cambiar el valor de '{clave}'? (Si/No): ").lower()
            if resp == "si":
                nuevo_valor = input("\tüîÅ Nuevo valor: ").upper().strip()
                pelicula.update({clave: nuevo_valor})
        print("\n\t\t ‚úÖ CAMBIOS REALIZADOS CON √âXITO ‚úÖ")
    else:
        print("\t ‚ö†Ô∏è No hay pel√≠culas en el sistema ‚ö†Ô∏è")
    esperartecla()


def borrarCaracteristicaPeliculas():
    borrarpantalla()
    print("\n\t.:: üóëÔ∏è Borrar Caracter√≠stica de Pel√≠cula üóëÔ∏è::.\n")
    if len(pelicula) > 0:
        print("\n\tCaracter√≠sticas actuales:")
        for clave, valor in pelicula.items():
            print(f"\t{clave} : {valor}")
        resp = input("\n\t¬øDeseas borrar una caracter√≠stica? (Si/No): ").lower()
        if resp == "si":
            atributo = input("Nombre de la caracter√≠stica a borrar: ").lower().strip()
            if atributo in pelicula:
                pelicula.pop(atributo)
                print("\n\t\t ‚úÖ CARACTER√çSTICA BORRADA CON √âXITO ‚úÖ")
            else:
                print(f"\n\t‚ö†Ô∏è La caracter√≠stica '{atributo}' no existe.")
    else:
        print("\t‚ö†Ô∏è No hay pel√≠culas en el sistema ‚ö†Ô∏è")
    esperartecla()
